name: Deployment removal from Railway

on:
  workflow_dispatch:

jobs:
  remove_deployment:
    runs-on: ubuntu-latest

    steps:
      - name: Prepare Ubuntu with cURL and jq
        run: |
          sudo apt-get update
          sudo apt-get install -y curl jq

      - name: Fetch deployments with SUCCESS status
        id: fetch_deployments
        run: |
          query="query { project(id: \\"\"${{ vars.RAILWAY_PROJECT_ID }}\\"\") { id name deployments { edges { node { id status } } } } }"
          echo "$query"
          response=$(curl -s \
            --request POST \
            --url https://backboard.railway.app/graphql/v2 \
            --header "Authorization: Bearer ${{ secrets.RAILWAY_PERSONAL_TOKEN }}" \
            --header "Content-Type: application/json" \
            --data "{\"query\":\"$query\"}")
          echo "$response"

          deployment_id=$(echo "$response" | jq -r '.data.project.deployments.edges[] | select(.node.status == "SUCCESS") | .node.id')
          echo "$deployment_id"

          echo "DEPLOYMENT_ID=$deployment_id" >> $GITHUB_ENV

      - name: Remove deployment
        run: |
          query="mutation { deploymentRemove(id: \\"\"$DEPLOYMENT_ID\\"\" ) }"
          echo "$query"
          response=$(curl -s \
            --request POST \
            --url https://backboard.railway.app/graphql/v2 \
            --header "Authorization: Bearer ${{ secrets.RAILWAY_PERSONAL_TOKEN }}" \
            --header "Content-Type: application/json" \
            --data "{\"query\":\"$query\"}")
          echo "$response"
        env:
          DEPLOYMENT_ID: ${{ env.DEPLOYMENT_ID }}
